Final Project
Advanced Graphics
Simulation and Modelling

Rafael Ayala
Jordan Stadler

Dependancies
------------
	- GCC or similar C compiler
	- OpenGL libraries

How to Run
----------

	gcc -lGL -lGLU -lglut curve.c
	./a.out
	(update this later)

Description
-----------

	- Spheres that move (in 2D or 3D, undecided) on curves with randomized endpoints
	- Spheres deteriorate over time (particles fly out)
	- Destructive collisions (other spheres or walls)
	- Squish on impact

TODO General
------------
	- refactor more
	- ball spawning NAN's

TODO Simulation Presentation
----------------------------
[X]	- Decay
[X]	- Death and Birth of spheres from the system
[X]	- Adjusting curves (probabilites)
[?]	- Optimize collisions  
[X]	- random color eqn
[?]	- mass and momentum
[X]	- random sizes(0.15 0.75)
[X]	- Nudge collisions
	- Optional Decay Equations (optional)
	- Decay on collision	
	- Sort out RNG
[X]	- Fix collision detection
[X]	- Automate spawning based on mass loss

TODO Graphics Presentation
--------------------------
	- Mouse and Keyboard scene navigation (Camera Controls)
	- Release particles on crash and decay
	- color based on decay (optional)
	- squish (based on angle of collision) + ease in/out
	- reflection using stencil buffer
	- 3D (optional)
	- transparent cube (optional)
	- System info via text (optional)
